function bounds = intersectBounds(uBounds)

[nBounds, anchura] = size(uBounds);
%Ordena las bounds en función de la frecuencia a la que hacen referencia
orderedBounds = sortrows(uBounds,anchura);
nPhase = (anchura-1)/2;
i=1;
bounds = [];
cont = 1;
while (i<=nBounds)
    boundsFreq=[];
    freq = orderedBounds(i,anchura);
    j=1;
    while(((i+j-1)<=nBounds)&&(orderedBounds((i+j-1),anchura)==freq))
        boundsFreq(j,:)=orderedBounds(i+j-1,:);
        j=j+1;
    end
    boundMax = max(boundsFreq(:,1:nPhase),[],1);
    boundMin = min(boundsFreq(:,nPhase+1:2*nPhase),[],1);
    
    %Hay que eliminar las bounds tipo A que no hagan falta
    %Para cada frecuencia:
    %   Eliminar los boundMin si boundMax ocupa todo el ancho de fase
    %   Eliminar los boundMax si boundMin ocupa todo el ancho de fase    
    
    MaxNull = find(boundMax(boundMax==-320));
    if (length(MaxNull)==0)
        boundMin(:)=320;
    end
    
    MinNull = find(boundMin(boundMin==320));
    if (length(MinNull)==0)
        boundMax(:)=320;
    end    
   
    bounds(cont,:) = [boundMax boundMin freq];
    cont = cont+1;
    i=i+j-1;
end

